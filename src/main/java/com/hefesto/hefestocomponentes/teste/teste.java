/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hefesto.hefestocomponentes.teste;

import br.com.caelum.stella.validation.CPFValidator;
import com.hefesto.hefestocomponentes.HFCalendar.HFCalendar;
import com.hefesto.hefestocomponentes.HFGraph.HFGrafDataSource;
import com.hefesto.hefestocomponentes.HFImagenLoader.HFImageLoader;
import com.hefesto.hefestocomponentes.HFNotification.HFNotification;
import com.hefesto.hefestocomponentes.HFTable.utils.HFTableUtil;
import com.hefesto.hefestocomponentes.HFTreeTable.HFRowData;
import com.hefesto.hefestocomponentes.HFUtils.HFCollors;
import com.hefesto.hefestocomponentes.HFUtils.HFImageComponents;
import com.hefesto.hefestocomponentes.HFUtils.PassWordSecurity;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyVetoException;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JProgressBar;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.plaf.basic.BasicInternalFrameTitlePane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.tree.DefaultMutableTreeNode;
import org.japura.modal.Modal;
import org.jfree.data.time.Second;
import org.joda.time.LocalDate;

/**
 *
 * @author flavio
 */
public class teste extends javax.swing.JFrame {
    
    List<String> ups;
    int cont = 0;
    String tmp;
    JPopupMenu pop;

    /**
     * Creates new form teste
     *
     * @throws java.lang.Exception
     */
    public teste() throws Exception {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        initComponents();
        String[] s = {"Flavio", "Marcelo", "Natalia", "Naiane", "Rodrigo", "Rogerio", "Rogeria", "Marcela", "Flavia"};
        String[] ss = {"Flavios", "Marcelos", "Natalias", "Naianes", "Rodrigos", "Rogerios", "Rogerias", "Marcelas", "Flavias"};
        List<Object[]> lista = new ArrayList<>();
        
        lista.add(s);
        lista.add(ss);
        incializatabletru();
        ups = new ArrayList<>();
        listaw = new HFTableUtil(listaw).colorize().setEditable(0).setarCheckBox()
                .setarCheckBoxSelectable(1).setarCheckBoxSelectable(2).setarCheckBoxSelectable(3).setarProgressBar().apply();
        
        hFComboBox1.adicionarItens(lista);
        hFComboBox1.setPesquisavel(true);
        
        Map<LocalDate, String> testeFeriado = new HashMap<>();
        LocalDate teste = new LocalDate(2014, 8, 19);
        testeFeriado.put(teste, "Teste");
        hFCalendar1.setDatasMarcadas(testeFeriado);
        System.out.println("Pass: " + PassWordSecurity.encrypt("teste"));
        jSlider1.createStandardLabels(1, 1);
        carregar();
        carregarCores();
        carregaDesktop();
        carregarChart();
        preencheGrafico();
        cargaGraf();
// HFFormatter.setMaskFormatedFieldNumber(jFormattedTextField1, HFFormatter.CPF_MASK);
        jMenuBar1.registerKeyboardAction((ActionEvent e) -> {
            try {
                nextFrame();
            } catch (PropertyVetoException ex) {
                Logger.getLogger(teste.class.getName()).log(Level.SEVERE, null, ex);
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_LEFT, InputEvent.CTRL_DOWN_MASK), JComponent.WHEN_IN_FOCUSED_WINDOW);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        taskpanel = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        movingAverage1 = new org.jfree.data.time.MovingAverage();
        standardDialFrame1 = new org.jfree.chart.plot.dial.StandardDialFrame();
        xYAreaRenderer1 = new org.jfree.chart.renderer.xy.XYAreaRenderer();
        xYLineAndShapeRenderer1 = new org.jfree.chart.renderer.xy.XYLineAndShapeRenderer();
        xYPlot1 = new org.jfree.chart.plot.XYPlot();
        xYAreaRenderer2 = new org.jfree.chart.renderer.xy.XYAreaRenderer();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        try {
            hFDataField2 = new com.hefesto.hefestocomponentes.HFDataField.HFDataField();
        } catch (java.text.ParseException e1) {
            e1.printStackTrace();
        }
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        hFComboBox1 = new com.hefesto.hefestocomponentes.HFComboBox.HFComboBox();
        hFPasswordField1 = new com.hefesto.hefestocomponentes.HFPassWordField.HFPasswordField();
        hFTextField1 = new com.hefesto.hefestocomponentes.HFTextField.HFTextField();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        hFFormattedTextField1 = new com.hefesto.hefestocomponentes.HFFormattedTextField.HFFormattedTextField();
        hFNumberField1 = new com.hefesto.hefestocomponentes.HFNumberField.HFNumberField();
        try {
            hFDataField1 = new com.hefesto.hefestocomponentes.HFDataField.HFDataField();
        } catch (java.text.ParseException e1) {
            e1.printStackTrace();
        }
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaw = new com.hefesto.hefestocomponentes.HFTable.HFTable();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        try {
            hFTreeTable4 = new com.hefesto.hefestocomponentes.HFTreeTable.HFTreeTable();
        } catch (java.lang.Exception e1) {
            e1.printStackTrace();
        }
        jPanel7 = new javax.swing.JPanel();
        hFCalendar1 = new com.hefesto.hefestocomponentes.HFCalendar.HFCalendar();
        jPanel8 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        hFTabbedPane1 = new com.hefesto.hefestocomponentes.HFTabbedPane.HFTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jColorChooser1 = new javax.swing.JColorChooser();
        desktop = new javax.swing.JDesktopPane();
        jPanel11 = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel14 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        chartpainel = new javax.swing.JPanel();
        hFLineGrafPainel2 = new com.hefesto.hefestocomponentes.HFGraph.HFLineGrafPainel();
        linhachart = new com.hefesto.hefestocomponentes.HFGraph.HFLineGrafPainel();
        paretoChart = new com.hefesto.hefestocomponentes.HFGraph.HFParetoChart();
        barChart = new com.hefesto.hefestocomponentes.HFGraph.HFBarGrafPainel();
        hFLineGrafPainel1 = new com.hefesto.hefestocomponentes.HFGraph.HFLineGrafPainel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        taskpanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taskpanelKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taskpanelKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taskpanelKeyTyped(evt);
            }
        });

        jButton10.setText("jButton10");
        jButton10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton10KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout taskpanelLayout = new javax.swing.GroupLayout(taskpanel);
        taskpanel.setLayout(taskpanelLayout);
        taskpanelLayout.setHorizontalGroup(
            taskpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(taskpanelLayout.createSequentialGroup()
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 786, Short.MAX_VALUE))
        );
        taskpanelLayout.setVerticalGroup(
            taskpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        hFDataField2.setText("hFDataField2");
        hFDataField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hFDataField2FocusLost(evt);
            }
        });
        hFDataField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hFDataField2ActionPerformed(evt);
            }
        });

        jFormattedTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextField1FocusLost(evt);
            }
        });

        hFComboBox1.setAutoComplete(java.lang.Boolean.FALSE);
        hFComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hFComboBox1ActionPerformed(evt);
            }
        });
        hFComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hFComboBox1FocusLost(evt);
            }
        });

        hFPasswordField1.setText("hFPasswordField1");

        hFTextField1.setMaiusculo(java.lang.Boolean.FALSE);
        hFTextField1.setMinimumSize(new java.awt.Dimension(100, 27));
        hFTextField1.setPrimeiraMaiuscula(java.lang.Boolean.FALSE);
        hFTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hFTextField1KeyPressed(evt);
            }
        });
        hFTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hFTextField1FocusLost(evt);
            }
        });

        jButton1.setText("Notification");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setText("teste stackTrace");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("teste insert remove");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Adicionar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("carregar não existe");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMaximum(10);
        jSlider1.setMinimum(1);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        hFFormattedTextField1.setMascara("##-##-####");
        hFFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hFFormattedTextField1ActionPerformed(evt);
            }
        });
        hFFormattedTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hFFormattedTextField1FocusLost(evt);
            }
        });

        hFNumberField1.setNumeroCasa(2);

        jProgressBar1.setValue(15);
        jProgressBar1.setOpaque(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(hFDataField2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(hFPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hFTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7))
                    .addComponent(hFComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hFFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(hFNumberField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hFDataField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(478, 478, 478))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hFDataField2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hFComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(hFPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hFFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hFTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hFNumberField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hFDataField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(498, 498, 498))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(507, 507, 507))
        );

        jTabbedPane1.addTab("Campos de Texto", jPanel4);

        listaw.setColunas(new String[] {"teste", "teste", "teste", "teste", "testebar"});
        listaw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listawMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaw);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1148, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Tabela", jPanel5);

        jButton2.setText("Adicionar Nó");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        hFTreeTable4.setColunas(new String[] {"coluna1", "coluna2", "coluna3", "coluna4"});
        hFTreeTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hFTreeTable4MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(hFTreeTable4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1148, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tree Table", jPanel6);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(hFCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 816, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(hFCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 280, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Calendario", jPanel7);

        jButton3.setText("Add Tab");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Set All Closable");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        hFTabbedPane1.setClosable(java.lang.Boolean.FALSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1140, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        hFTabbedPane1.addTab("tab1", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1140, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        hFTabbedPane1.addTab("tab2", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1140, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        hFTabbedPane1.addTab("tab3", jPanel3);

        jButton5.setText("getTabbs");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(hFTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addComponent(hFTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tabbed Painel", jPanel8);

        jScrollPane3.setToolTipText("");
        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setAutoscrolls(true);

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));
        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel10.setLayout(new java.awt.GridLayout(0, 3, 5, 5));
        jScrollPane3.setViewportView(jPanel10);

        jSplitPane1.setRightComponent(jScrollPane3);
        jSplitPane1.setLeftComponent(jColorChooser1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1140, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Paleta de Cores", jPanel9);

        desktop.setBackground(new java.awt.Color(102, 102, 102));
        desktop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                desktopMouseClicked(evt);
            }
        });
        desktop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                desktopKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1148, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Desktop", desktop);

        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jSplitPane3.setLeftComponent(jScrollPane4);

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField1");

        jTextField3.setText("jTextField1");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setText("jTextField1");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.setText("jTextField1");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.setText("jTextField1");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField7.setText("jTextField1");

        jTextField8.setText("jTextField1");

        jTextField9.setText("jTextField1");
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        jTextField10.setText("jTextField1");
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1151, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane5.setViewportView(jPanel14);

        jSplitPane3.setRightComponent(jScrollPane5);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1148, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Split", jPanel11);

        chartpainel.setLayout(new java.awt.GridLayout(2, 2, 1, 1));

        hFLineGrafPainel2.setLegenda("Teste");
        hFLineGrafPainel2.setTitulo("teste2");
        chartpainel.add(hFLineGrafPainel2);
        chartpainel.add(linhachart);
        chartpainel.add(paretoChart);
        chartpainel.add(barChart);

        jTabbedPane1.addTab("Charts", chartpainel);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1156, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hFDataField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFDataField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hFDataField1ActionPerformed

    private void hFDataField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFDataField2FocusLost
        hFDataField2.valida();
        System.out.println(hFDataField2.getDate());// TODO add your handling code here:
    }//GEN-LAST:event_hFDataField2FocusLost

    private void hFDataField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFDataField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hFDataField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        HFNotification.getInstance().notificarSO(2000, "Testado HFNotification", "testando ", new HFImageLoader(this.getClass()).getAbsolutPath(HFImageComponents.HEFESTO_LOGO));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFormattedTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextField1FocusLost
        System.out.println("Teste Stella: " + (new CPFValidator().invalidMessagesFor(jFormattedTextField1.getText()).get(0).getMessage()));
    }//GEN-LAST:event_jFormattedTextField1FocusLost

    private void hFComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFComboBox1FocusLost
        hFComboBox1.valida();
    }//GEN-LAST:event_hFComboBox1FocusLost

    private void hFComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFComboBox1ActionPerformed

    }//GEN-LAST:event_hFComboBox1ActionPerformed

    private void hFTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFTextField1FocusLost
        hFTextField1.Valida();
    }//GEN-LAST:event_hFTextField1FocusLost

    private void hFTreeTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hFTreeTable4MouseClicked
        Object o = hFTreeTable4.getTreeTableModel().getChild(hFTreeTable4.getModel().getValueAt(hFTreeTable4.getSelectedRow(), 0), 0);
    }//GEN-LAST:event_hFTreeTable4MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // get the first selected row. If not selected row, return
        hFTreeTable4.addNodeInSelectedNode(new HFRowData(Arrays.asList(new Object[]{"Meu teste", "Teste2", "Teste 3", "Teste 4"}), true));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        hFTabbedPane1.addTab(hFTabbedPane1.getTabCount() + "t", new JPanel());        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        hFTabbedPane1.setAllclosable();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        for (Component object : hFTabbedPane1.getComponents()) {
            System.out.println("testnome: " + (object));
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Double d = null;
        try {
            d.floatValue();
        } catch (Exception ex) {
            System.out.println("Meu Stack");
            for (StackTraceElement st : ex.getStackTrace()) {
                System.out.println(st.toString());
            }
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        System.out.println(teste());

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        ups.add(hFTextField1.getText());
        hFTextField1.setText("");
        cont = ups.size() - 1;

    }//GEN-LAST:event_jButton8ActionPerformed

    private void hFTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hFTextField1KeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_UP) {
            if (cont + 1 == ups.size()) {
                tmp = hFTextField1.getText();
                
            }
            if (cont >= 0 && !ups.isEmpty()) {
                hFTextField1.setText(ups.get(cont));
                cont--;
            }
        }
        if (evt.getExtendedKeyCode() == KeyEvent.VK_DOWN) {
            if (cont + 1 < ups.size() && !ups.isEmpty()) {
                cont++;
            } else {
                hFTextField1.setText(tmp);
            }
        }
    }//GEN-LAST:event_hFTextField1KeyPressed

    private void desktopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_desktopMouseClicked

    }//GEN-LAST:event_desktopMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        System.out.println(getClass().getResource("/teste/teste/teste.png").getPath());        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.SHIFT_DOWN_MASK) {
            Modal.addModal(this, taskpanel);
        }
        System.out.println(evt.getKeyCode());
// TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (evt.getKeyCode() == KeyEvent.SHIFT_DOWN_MASK) {
            Modal.closeModal(taskpanel);
        }
        System.out.println(evt.getKeyCode());

    }//GEN-LAST:event_formKeyReleased

    private void taskpanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taskpanelKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_taskpanelKeyTyped

    private void taskpanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taskpanelKeyReleased

    }//GEN-LAST:event_taskpanelKeyReleased

    private void desktopKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desktopKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_desktopKeyPressed

    private void taskpanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taskpanelKeyPressed

    }//GEN-LAST:event_taskpanelKeyPressed

    private void jButton10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton10KeyPressed
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_jButton10KeyPressed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        System.out.println(jSlider1.getValue());        // TODO add your handling code here:
    }//GEN-LAST:event_jSlider1StateChanged

    private void hFFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hFFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hFFormattedTextField1ActionPerformed

    private void hFFormattedTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hFFormattedTextField1FocusLost
        System.out.println(hFFormattedTextField1.getValorString());
    }//GEN-LAST:event_hFFormattedTextField1FocusLost

    private void listawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listawMouseClicked
        if (evt.getClickCount() == 1) {
            System.out.println(listaw.getValueAT(listaw.getSelectedRow(), listaw.getSelectedColumn()));
        }
    }//GEN-LAST:event_listawMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new teste().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(teste.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    private void carregar() {
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"CF", "", "", ""}), true));
        
        DefaultMutableTreeNode incomeNode = new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Income", null, null, new HFCalendar()}), true));
        incomeNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{null, "250001", "50001", "3000001"}), true)));
        incomeNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary2", "250002", "50002", "3000002"}), true)));
        incomeNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary3", "250003", "50003", "3000003"}), true)));
        incomeNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary4", "250004", "50004", "3000004"}), true)));
        incomeNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary5", "250005", "50005", "3000005"}), true)));
        
        DefaultMutableTreeNode expenseNode = new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Expenses", "25000", "5000", "300000"}), true));
        expenseNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary21", "250001", "50001", "3000001"}), false)));
        expenseNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary22", "250002", "50002", "3000002"}), false)));
        expenseNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary23", "250003", "50003", "3000003"}), false)));
        expenseNode.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary24", "250004", "50004", "3000004"}), false)));
        
        DefaultMutableTreeNode noder = new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary25", "250005", "50005", "3000005"}), true));
        noder.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary21", "250001", "50001", "3000001"}), false)));
        noder.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary22", "250002", "50002", "3000002"}), false)));
        noder.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary23", "250003", "50003", "3000003"}), false)));
        noder.add(new DefaultMutableTreeNode(new HFRowData(Arrays.asList(new Object[]{"Salary24", "250004", "50004", "3000004"}), false)));
        
        expenseNode.add(noder);
        rootNode.add(expenseNode);
        rootNode.add(incomeNode);
        
        hFTreeTable4.inserirTabela(rootNode);
    }
    
    private void incializatabletru() {
        
        List<Object> listas;
        List<List<?>> li = new ArrayList<>();
        for (int i = 0; i < 10; i++) {
            listas = new ArrayList<>();
            for (int j = 0; j < 5; j++) {
                if (j == 0) {
                    listas.add("teste");
                }
                if (j == 1) {
                    listas.add(false);
                }
                if (j == 2) {
                    listas.add(false);
                }
                if (j == 3) {
                    listas.add(false);
                }
                if (j == 4) {
                    JProgressBar bar = new JProgressBar();
                    bar.setValue(i * 10);
                    listas.add(bar);
                    bar.setStringPainted(true);
                    bar.setBackground(HFCollors.GrassGreen);
                }
                
            }
            li.add(listas);
        }
        listaw.addNewTableListRows(li);
    }
    
    private void carregarCores() throws Exception {
        JLabel label;
        Color cor;
        for (Field field : HFCollors.class.getFields()) {
            field.setAccessible(true);
            cor = (Color) field.get(new Object());
            label = new JLabel();
            label.setOpaque(true);
            label.setText(field.getName());
            label.setForeground(HFCollors.colorRealce(cor));
            label.setBackground(cor);
            label.setSize(182, 200);
            label.setHorizontalAlignment(JLabel.CENTER);
            jPanel10.add(label);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hefesto.hefestocomponentes.HFGraph.HFBarGrafPainel barChart;
    private javax.swing.JPanel chartpainel;
    private javax.swing.JDesktopPane desktop;
    private com.hefesto.hefestocomponentes.HFCalendar.HFCalendar hFCalendar1;
    private com.hefesto.hefestocomponentes.HFComboBox.HFComboBox hFComboBox1;
    private com.hefesto.hefestocomponentes.HFDataField.HFDataField hFDataField1;
    private com.hefesto.hefestocomponentes.HFDataField.HFDataField hFDataField2;
    private com.hefesto.hefestocomponentes.HFFormattedTextField.HFFormattedTextField hFFormattedTextField1;
    private com.hefesto.hefestocomponentes.HFGraph.HFLineGrafPainel hFLineGrafPainel1;
    private com.hefesto.hefestocomponentes.HFGraph.HFLineGrafPainel hFLineGrafPainel2;
    private com.hefesto.hefestocomponentes.HFNumberField.HFNumberField hFNumberField1;
    private com.hefesto.hefestocomponentes.HFPassWordField.HFPasswordField hFPasswordField1;
    private com.hefesto.hefestocomponentes.HFTabbedPane.HFTabbedPane hFTabbedPane1;
    private com.hefesto.hefestocomponentes.HFTextField.HFTextField hFTextField1;
    private com.hefesto.hefestocomponentes.HFTreeTable.HFTreeTable hFTreeTable4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private com.hefesto.hefestocomponentes.HFGraph.HFLineGrafPainel linhachart;
    private com.hefesto.hefestocomponentes.HFTable.HFTable listaw;
    private org.jfree.data.time.MovingAverage movingAverage1;
    private com.hefesto.hefestocomponentes.HFGraph.HFParetoChart paretoChart;
    private org.jfree.chart.plot.dial.StandardDialFrame standardDialFrame1;
    private javax.swing.JPanel taskpanel;
    private org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer1;
    private org.jfree.chart.renderer.xy.XYAreaRenderer xYAreaRenderer2;
    private org.jfree.chart.renderer.xy.XYLineAndShapeRenderer xYLineAndShapeRenderer1;
    private org.jfree.chart.plot.XYPlot xYPlot1;
    // End of variables declaration//GEN-END:variables
public String teste() {
        HashSet<Long> list = new HashSet<>();
        new Thread() {
            
            @Override
            public void run() {
                for (int i = 0; i < 100000000; i++) {
                    //  System.out.println("Threas2 " + i);
                }
            }
            
        }.start();
        
        for (Long i = 0L; i < 10L; i++) {
            list.add(i);
            list.add(i);
        }
        
        for (Long long1 : list) {
            System.out.println("l: " + long1);
        }
        for (Long i = 0L; i < 10L; i++) {
            list.remove(i);
        }
        for (Long long1 : list) {
            System.out.println("l2: " + long1);
        }
        return "testeOK";
    }
    
    private void carregaDesktop() {
        Testeframe frame;
//        JPopupMenu menu = new JPopupMenu();
//        JMenuItem it = new JMenuItem("NEW ICO");
//        it.setSize(50, 24);
//        it.setAction(new AbstractAction() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                desktop.setBackground(Color.red);
//            }
//        });
//        menu.add("New Color", it);
//        it = new JMenuItem(new AbstractAction() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//            }
//        });
//        menu.add("teste", it);

//        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);
        for (int i = 0; i < 10; i++) {
            frame = new Testeframe();
            frame.setTitle(i + "");
            frame.setMaximizable(true);
            frame.setResizable(true);
            frame.setIconifiable(true);
            frame.setSize(200, 200);
            BasicInternalFrameUI ui = (BasicInternalFrameUI) frame.getUI();
            BasicInternalFrameTitlePane ip = (BasicInternalFrameTitlePane) ui.getNorthPane();
            
            ip.addMouseMotionListener(new MouseAdapter() {
                @Override
                public void mouseDragged(MouseEvent e) {
                    BasicInternalFrameTitlePane i = (BasicInternalFrameTitlePane) e.getComponent();
                    JInternalFrame fr = (JInternalFrame) e.getComponent().getParent();
                    try {
                        System.out.println(e.getX() + " : " + e.getY());
                        
                        if (e.getY() > 15 && fr.isMaximum()) {
                            fr.setMaximum(false);
                        }
                        
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            });
            frame.addComponentListener(new ComponentAdapter() {
                
                @Override
                public void componentMoved(ComponentEvent e
                ) {
                    JInternalFrame fr = (JInternalFrame) e.getComponent();
                    try {
                        if (fr.getLocation().y <= -10 && fr.isMaximizable() && !fr.isMaximum()) {
                            fr.setMaximum(true);
                            fr.setLocation(fr.getLocation().x, 0);
                        } else if (fr.getLocation().y <= -10 && !fr.isMaximizable()) {
                            fr.setLocation(fr.getLocation().x, 0);
                        } else if (fr.getLocation().x <= -50 && !fr.isResizable()) {
                            fr.setLocation(0, fr.getLocation().y);
                        } else if (fr.getLocation().x > (desktop.getSize().width - fr.getSize().width) + 50
                                && !fr.isResizable()) {
                            fr.setLocation(desktop.getSize().width - fr.getSize().width, fr.getLocation().y);
                        } else if ((fr.getSize().getWidth() == (desktop.getSize().width / 2) - 1
                                && (fr.getLocation().x > 1 && fr.getLocation().x < desktop.getSize().width / 2))
                                ^ ((fr.getLocation().x > (desktop.getSize().width / 2) + 1
                                && fr.getLocation().x < desktop.getSize().width - 1)
                                && fr.getSize().getWidth() == (desktop.getSize().width / 2) - 1)) {
                            fr.setSize(fr.getPreferredSize());
                        } else if (fr.getLocation().x <= -50) {
                            fr.setLocation(0, 0);
                            fr.setSize((desktop.getSize().width / 2) - 1, desktop.getSize().height);
                        } else if (fr.getLocation().x >= (desktop.getSize().width - fr.getSize().width) + 50) {
                            fr.setLocation(new Double(desktop.getSize().width / 2).intValue() + 1, 0);
                            fr.setSize((desktop.getSize().width / 2) - 1, desktop.getSize().height);
                            
                        }
                        
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                
            });
            desktop.add(frame);
            frame.setVisible(true);
            frame.moveToBack();
//        }
//        HFIcon jp;
//        GridLayout grid = new GridLayout();
//        grid.setHgap(50);
//        grid.setVgap(20);
//        grid.setColumns(desktop.getWidth() / 64);
//        grid.setRows(desktop.getHeight() / 64);
//        desktop.setLayout(grid);
//        for (int j = 0; j < 100; j++) {
//            jp = new HFIcon();
//            jp.setCod(j + "");
//            jp.setName(j + "");
//            jp.setOpaque(false);
//
//            jp.addMouseListener(new MouseAdapter() {
//
//                @Override
//                public void mouseClicked(MouseEvent e) {
//                    if (e.getClickCount() == 2) {
//                        JInternalFrame fr = new JInternalFrame();
//                        fr.setTitle(e.getComponent().getName());
//                        fr.setSize(150, 150);
//                        desktop.add(fr);
//                        fr.setVisible(true);
//                        System.out.println("NOme: " + e.getComponent().getName());
//                    } //To change body of generated methods, choose Tools | Templates.
//                }
//
//                @Override
//                public void mouseExited(MouseEvent e) {
//                    e.getComponent().setBackground(Color.WHITE);
//                    ((HFIcon) e.getComponent()).setOpaque(false);
//                }
//
//                @Override
//                public void mouseEntered(MouseEvent e) {
//                    e.getComponent().setBackground(Color.GRAY);
//                    ((HFIcon) e.getComponent()).setOpaque(true);
//
//                }
//
//                @Override
//                public void mouseReleased(MouseEvent e) {
//                    e.getComponent().setBackground(Color.WHITE);
//                }
//
//                @Override
//                public void mousePressed(MouseEvent e) {
//                    e.getComponent().setBackground(Color.BLUE);
//                }
//
//            });
//
//            desktop.add(jp);
//            desktop.setLayer(jp, 0);
//            jp.setVisible(true);
        }
//
//        desktop.setComponentPopupMenu(menu);
//        desktop.updateUI();
    }
    
    private void nextFrame() throws PropertyVetoException {
        JInternalFrame frame = desktop.getSelectedFrame();
        if (frame == null) {
            if (desktop.getAllFrames().length > 0) {
                frame = desktop.getAllFrames()[0];
                frame.setIcon(false);
                desktop.setSelectedFrame(frame);
                frame.moveToFront();
            }
        } else {
            JInternalFrame[] frames = desktop.getAllFrames();
            frame = desktop.getSelectedFrame();
            int cont = 0;
            for (JInternalFrame fr : frames) {
                System.out.println("tem frame" + fr.getTitle());
                if (!fr.equals(frame)) {
                    cont++;
                } else {
                    System.out.println(cont);
                    break;
                }
            }
            
        }
    }
    
    private void carregarChart() {
        hFLineGrafPainel2.setRealtimedDataGraf("teste3", Second.class);
    }
    
    private void preencheGrafico() {
        new Thread() {
            
            @Override
            public void run() {
                Random r = new Random();
                while (true) {
                    HFGrafDataSource data = new HFGrafDataSource();
                    data.setSerie(new Date());
                    data.setValor(r.nextInt(357) + 0.0);
                    hFLineGrafPainel2.addSerieValue(data, 0);
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(teste.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (hFLineGrafPainel2.getTotalRegistros() > 10) {
                        hFLineGrafPainel2.removeIten(0, 0);
                    }
                }
            }
            
        }.start();
    }
    
    private void cargaGraf() {
        List<HFGrafDataSource> dt2 = new ArrayList();
        HFGrafDataSource gfd2 = new HFGrafDataSource();
        gfd2.setSerie("a");
        gfd2.setValor(18.76);
        gfd2.setEixoX("cadeira");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("a");
        gfd2.setValor(8.49);
        gfd2.setEixoX("Papel");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("b");
        gfd2.setValor(17.42);
        gfd2.setEixoX("Micro");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("b");
        gfd2.setValor(10.32);
        gfd2.setEixoX("Mesa");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("b");
        gfd2.setValor(10.05);
        gfd2.setEixoX("Monitor");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(9.83);
        gfd2.setEixoX("Borracha");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(8.35);
        gfd2.setEixoX("Grampeador");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(4.5);
        gfd2.setEixoX("Furador");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(4.47);
        gfd2.setEixoX("Caneta");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(2.86);
        gfd2.setEixoX("Impressora");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(2.79);
        gfd2.setEixoX("Lapis");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(1.30);
        gfd2.setEixoX("Mouse");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(0.45);
        gfd2.setEixoX("CD");
        dt2.add(gfd2);
        gfd2 = new HFGrafDataSource();
        gfd2.setSerie("c");
        gfd2.setValor(0.42);
        gfd2.setEixoX("Clips");
        dt2.add(gfd2);
        
        barChart.setDataSource(dt2);
        linhachart.setDataSource(dt2);
        paretoChart.setLegenda("Produtos");
        paretoChart.setDataSource(dt2);
    }
}
